"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[550],{71243:e=>{e.exports=JSON.parse('{"functions":[{"name":"__init__","desc":"This method initializes the state machine,\\nIt get\'s called automatically if created with the [Constructor].","params":[],"returns":[{"desc":"","lua_type":"void"}],"function_type":"method","private":true,"source":{"line":32,"path":"src/Statemachine.lua"}},{"name":"setEnabled","desc":"This method can enable or disable a state.","params":[{"name":"stateName","desc":"name of the state","lua_type":"string"},{"name":"stateEnabled","desc":"true means enabled, false means disabled","lua_type":"boolean"}],"returns":[{"desc":"","lua_type":"void"}],"function_type":"method","source":{"line":92,"path":"src/Statemachine.lua"}},{"name":"apply","desc":"This method applies properties from [Priority.ActiveState] to [Humanoid].","params":[],"returns":[{"desc":"","lua_type":"void"}],"function_type":"method","private":true,"source":{"line":104,"path":"src/Statemachine.lua"}},{"name":"update","desc":"This method loops through the states that are enabled and will\\nactivate the one with the highest priority.","params":[],"returns":[{"desc":"","lua_type":"void"}],"function_type":"method","private":true,"source":{"line":138,"path":"src/Statemachine.lua"}},{"name":"newState","desc":"Use this method to add states to a statemachine/[Priority] class.","params":[{"name":"name","desc":"name of the state","lua_type":"string"},{"name":"info","desc":"the state info","lua_type":"StateInfo"},{"name":"dont_update","desc":"if set to true, module won\'t use [Priority:update]","lua_type":"boolean?"}],"returns":[{"desc":"","lua_type":"void"}],"function_type":"method","source":{"line":178,"path":"src/Statemachine.lua"}},{"name":"batch_addState","desc":"Use this method to add multiple states to a statemachine/[Priority] class.","params":[{"name":"states","desc":"","lua_type":"{[string]: StateInfo}"}],"returns":[{"desc":"","lua_type":"void"}],"function_type":"method","source":{"line":196,"path":"src/Statemachine.lua"}}],"properties":[{"name":"ActiveStateChanged","desc":"```lua\\n-- Example\\nPriority.ActiveStateChanged:Connect(function(stateName)\\n\\nend)\\n```\\n\\nA signal that get\'s fired when [Priority.ActiveState] changes.\\n\\t","lua_type":"Signal","since":"v0.5.2","source":{"line":47,"path":"src/Statemachine.lua"}},{"name":"PropertyModifier","desc":"A list of functions that take a name and a number and modify it,\\nIt\'s used on properties that use numbers as their value.\\n\\t","lua_type":"{(n: string, p: number)->(number)}","source":{"line":56,"path":"src/Statemachine.lua"}},{"name":"ActiveState","desc":"Reference to the current active state.\\n\\t","lua_type":"StateInfo","source":{"line":64,"path":"src/Statemachine.lua"}},{"name":"StatesMap","desc":"A list of state infos that the module uses to figure out which one to activate.\\n\\t","lua_type":"{StateInfoMap}","private":true,"source":{"line":73,"path":"src/Statemachine.lua"}},{"name":"States","desc":"A list of states.\\n\\t","lua_type":"{StateInfo}","source":{"line":81,"path":"src/Statemachine.lua"}}],"types":[],"name":"Priority","desc":"Priority based state machine.","source":{"line":8,"path":"src/Statemachine.lua"}}')}}]);