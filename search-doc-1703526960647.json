[{"title":"Memory","type":0,"sectionRef":"#","url":"/Priority/api/Memory","content":"On this page Memory This item is only intended to be used by the module's authors. Private Priority classes get stored here so Constructor.new doesn't create multiple classes for one Humanoid.","keywords":""},{"title":"Priority","type":0,"sectionRef":"#","url":"/Priority/api/Priority","content":"","keywords":""},{"title":"Properties​","type":1,"pageTitle":"Priority","url":"/Priority/api/Priority#properties","content":" "},{"title":"ActiveStateChanged​","type":1,"pageTitle":"Priority","url":"/Priority/api/Priority#ActiveStateChanged","content":"&lt;/&gt; Priority.ActiveStateChanged: Signal -- Example Priority.ActiveStateChanged:Connect(function(stateName) end) A signal that get's fired when Priority.ActiveState changes. Fires: stateName string  "},{"title":"PropertyModifier​","type":1,"pageTitle":"Priority","url":"/Priority/api/Priority#PropertyModifier","content":"&lt;/&gt; Priority.PropertyModifier: {( n: string, p: number ) → (number)} A list of functions that take a name and a number and modify it, It's used on properties that use numbers as their value.  "},{"title":"ActiveState​","type":1,"pageTitle":"Priority","url":"/Priority/api/Priority#ActiveState","content":"&lt;/&gt; Priority.ActiveState: StateInfo Reference to the current active state.  "},{"title":"States​","type":1,"pageTitle":"Priority","url":"/Priority/api/Priority#States","content":"&lt;/&gt; Priority.States: {StateInfo} A list of states. "},{"title":"Functions​","type":1,"pageTitle":"Priority","url":"/Priority/api/Priority#functions","content":" "},{"title":"setEnabled​","type":1,"pageTitle":"Priority","url":"/Priority/api/Priority#setEnabled","content":"&lt;/&gt; Priority:setEnabled( stateName: string,-- name of the state stateEnabled: boolean-- true means enabled, false means disabled ) → void This method can enable or disable a state.  "},{"title":"newState​","type":1,"pageTitle":"Priority","url":"/Priority/api/Priority#newState","content":"&lt;/&gt; Priority:newState( name: string,-- name of the state info: StateInfo,-- the state info dont_update: boolean?-- if set to true, module won't use Priority:update ) → void Use this method to add states to a statemachine/Priority class.  "},{"title":"batch_addState​","type":1,"pageTitle":"Priority","url":"/Priority/api/Priority#batch_addState","content":"&lt;/&gt; Priority:batch_addState(states: {[string]: StateInfo}) → void Use this method to add multiple states to a statemachine/Priority class. "},{"title":"Constructor","type":0,"sectionRef":"#","url":"/Priority/api/Constructor","content":"","keywords":""},{"title":"Types​","type":1,"pageTitle":"Constructor","url":"/Priority/api/Constructor#types","content":" "},{"title":"StateInfo​","type":1,"pageTitle":"Constructor","url":"/Priority/api/Constructor#StateInfo","content":"&lt;/&gt; interface StateInfo { Enabled: boolean Active: boolean Priority: number Properties: {[string]: any}-- properties of a Humanoid }  "},{"title":"Functions​","type":1,"pageTitle":"Constructor","url":"/Priority/api/Constructor#functions","content":" "},{"title":"createWeight​","type":1,"pageTitle":"Constructor","url":"/Priority/api/Constructor#createWeight","content":"&lt;/&gt; Constructor.createWeight( priority: Priority, properties: {[string]: any}-- properties of a Humanoid, only properties that are numbers are acceptable, the property will get multiplied by the number you put as the value. ) → ( () → (),-- a destructor function that disables the weight string-- id of the weight ) -- Example local Priority = Priority5.new(humanoid) local disableWeight = Priority5.createWeight(Priority, { [&quot;WalkSpeed&quot;] = 0.5, -- multiplies WalkSpeed by 0.5 (2x slower) [&quot;JumpPower&quot;] = 2, -- doubles JumpPower }) task.wait(2) disableWeight() Creates a weight that can be applied to a Priority class  "},{"title":"new​","type":1,"pageTitle":"Constructor","url":"/Priority/api/Constructor#new","content":"&lt;/&gt; Constructor.new( humanoid: Instance | Humanoid -- preferably a Humanoid ) → Priority -- Example local character = ... local humanoid = character:WaitForChild(&quot;Humanoid&quot;) local Priority = Priority5.new(humanoid) Creates a Priority class "}]